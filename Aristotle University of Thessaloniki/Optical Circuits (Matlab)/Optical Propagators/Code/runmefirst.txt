% #########################################################################
% Αυτό είναι ένα εισαγωγικό MATLAB-script για τη χρήση της ρουτίνας APDWG
% (Asymmetric Planar Dielectric Waveguides).
% #########################################################################
%
% ΟΔΗΓΙΕΣ: Για εκτέλεση του script, φροντίστε το m-file αυτό να βρίσκεται 
% στον ίδιο φάκελο με την ρουτίνα APDWG.m, και 
% -ή πατήστε F5 στο πληκτρολόγιο (windows) ενώ είστε στον MATLAB-editor,
% -ή κλικ στο κουμπάκι "Save & Run" στο user-interface του MATLAB-editor,
% -ή καλέστε τη ρουτίνα από το MATLAB-command-window ("RunMeFirst_APDWG").
%
% *** Σε κάποια σημεία θα κάνει "pause" (δείτε το σχετικό μήνυμα στο 
%     command window), οπότε θα πρέπει να πατήσετε κάποιο πλήκτρο για να 
%     συνεχίσει, αφού διαβάσετε τα βοηθητικά σχόλια/εξηγήσεις μέσα σε αυτό  
%     το m-file.
%
% *** Για όλες τις ρουτίνες MATLAB που χρησιμοποιούνται στο script αυτό,
%     μπορείτε να μάθετε παραπάνω πληροφορίες από το help του προγράμματος 
%     (πχ "help FUNCTIONNAME" ή "doc FUNCTIONNAME" από το command-window).
% 
% Comments, remarks, corrections : alexpiti@auth.gr
%
% Alexandros Pitilakis, Thessaloniki, March 2013
% ** Update May 2015: Typos corrected Thanks Marianna!)

clc; close all; % <--- καθαρίζει το commmand-window & όλα τα figure

% =========================================================================
% Ένα απλό παράδειγμα μονόρρυθμου κ/ο
% =========================================================================
disp( '  ======== A Single-Mode APDWG Example ======== ' )
% Στο command-window εμφανίζονται οι παράμετροι του προβλήματος (δλδ τα
% ορίσματα εισόδου στην APDW). Στο figure που ανοίγει (κάνετε maximize): 
% Επάνω, βλέπουμε τη χαρακτηριστική εξίσωση (ΧΕ) για ΤΕ & ΤΜ ρυθμούς, σε 
% κάποιο διάστημα-τιμών neff (για την ακρίβεια, ανάμεσα σε δύο απειρισμούς
% της ΧΕ). Στο σημείο που η καμπύλη περνάει από το μηδέν, έχουμε ρίζα της 
% ΧΕ, δλδ οδηγούμενο ρυθμό. Κάτω, βλέπουμε το προφίλ της βασικής-συνιστώσας
% του ηλ.πεδίου για τον βασικό ΤΕ & ΤΜ ρυθμό.
APDWG;
pause
% Για παραπάνω πληροφορίες για την APDWG, διαβάστε το help της ρουτίνας
% και/ή τον κώδικα.

% =========================================================================
% Εισαγωγική Περιγραφή ρουτίνας APDWG:
% =========================================================================
disp(' ');
disp( '  ======== A Multimode APDWG Introduction ======== ' )

% Ως ορίσματα εισόδου στην APDWG, δίνουμε το μήκος κύματος (wl), το πάχος 
% του στρώματος οδήγησης (h), καθώς και τους τρεις δείκτες διάθλασης 
% (n1=στρ.οδήγησης, n2=υπόστρωμα, n3=επίστρωμα). Η ρουτίνα μας επιστρέφει 
% τους ενεργούς-δείκτες-διάθλασης (neff) για όλους τους οδηγούμενους 
% ρυθμούς, ΤΕ & ΤΜ, του APDWG. Εάν ορίσουμε/δώσουμε κ το διάνυσμα σημείων 
% (x), τότε η ρουτίνα θα μας επιστρέψει επίσης και το προφίλ των Ey (ή Hy) 
% συνιστωσών για τους TE (ή TM) ρυθμούς, στα σημεία του εγκάρσιου άξονα x.

% *** ΠΡΟΣΟΧΗ: Οι μονάδες-μέτρησης για τα wl,h,x είναι οι ΙΔΙΕΣ, δλδ τα
%     ορίσματα αυτά πρέπει να είναι της ίδιας τάξης μεγέθους.

% *** ΠΡΟΣΟΧΗ: Οι οδηγούμενοι ρυθμοί (Σχ 2.10) είναι αυτοί των οποίων οι 
%     ενεργοί δείκτες (n_eff) πληρούν: n_eff<n1 ΚΑΙ n_eff>max([n2,n3]) 

% Τα πέντε πρώτα ορίσματα-εισόδου της APDWG είναι βαθμωτά (scalar), δλδ:
disp( '  ** APDWG Parameters ** ')
wl = 1.55 % [μm] Μήκος κύματος
h  = 0.80 % [μm] Πάχος περιοχής οδήγησης
n1 = 3.45 % [.]="καθαρός αριθμός" δείκτης στρωμ. οδήγ.
n2 = 2.30 % [.]="καθαρός αριθμός" δείκτης υποστρωμ.
n3 = 1.00 % [.]="καθαρός αριθμός" δείκτης επιστρωμ.

% Το διάνυσμα-σημείων είναι πίνακας διαστάσεων 1-επί-Ν (πχ Ν=1000).
x  = linspace( -2*h , +2*h , 1000 ); % [μm]

% Κληση της APDWG:
[ neff_TE , neff_TM , Ey_TE , Hy_TM ] = APDWG( wl , h , n1 , n2 , n3 , x );

% Πόσοι ρυθμοί ΤΕ & ΤΜ υποστηρίζονται? Ποιοί οι ενεργοί τους δείκτες?
fprintf( '  Number of TE-modes supported = %d\n' , length(neff_TE) )
for k1 = 1:length(neff_TE)
    fprintf( '     n_eff of mode TE%d : %6.4f\n' , k1-1 , neff_TE(k1) )
end
fprintf( '  Number of TM-modes supported = %d\n' , length(neff_TM) )
for k2 = 1:length(neff_TM)
    fprintf( '     n_eff of mode TM%d : %6.4f\n' , k2-1 , neff_TM(k2) )
end

% Πως μοιάζουν τα προφίλ των ρυθμών αυτών?
figure
subplot(2,1,1);
plot( x , Ey_TE , 'o-' , 'MarkerSize' , 2 , 'MarkerFaceColor' , 'w' )
xlabel( 'x-dimension (um)' )
ylabel( 'E_y(x) for TE-modes' )
legend( [repmat('TE-',[k1,1]),num2str( (0:k1-1)' )] ) % Αριθμεί τους οδηγούμενους ρυθμούς
hold on; plot( -h/2*[1 1],[-1 1],'k-',+h/2*[1 1],[-1 1],'k-') % x-όρια περιοχής οδήγησης

subplot(2,1,2);
plot( x , Hy_TM , 'o-' , 'MarkerSize' , 2 , 'MarkerFaceColor' , 'w' )
xlabel( 'x-dimension (um)' )
ylabel( 'H_y(x) for TM-modes' )
legend( [repmat('TM-',[k2,1]),num2str( (0:k2-1)' )] ) % Αριθμεί τους οδηγούμενους ρυθμούς
hold on; plot( -h/2*[1 1],[-1 1],'k-',+h/2*[1 1],[-1 1],'k-') % x-όρια περιοχής οδήγησης

% Παρατηρείτε πως οι ρυθμοί "άρτιας/περιττής" τάξης (0,2,.../1,3,..) έχουν
% συμμετρικό/αντισυμμετρικό προφίλ (κατά τον x-άξονα) ως προς το κέντρο 
% της περιοχής οδήγησης (x=0). Επειδή ο κ/ο δεν είναι ακριβώς συμμετρικός
% (n2 άνισο του n3) το κέντρο-συμμετρίας δεν είναι ακριβώς στο x=0.

% Ποιά είναι η συγκέντρωση των πεδίων μέσα στο στρώμα οδήγησης? Αν ορίσουμε
% την "ένταση" (Ι, Intensity) των πεδίων ώς |F|^2, όπου F=Ey_TE ή Hy_TM:
icore = x>=-h/2 & x<=+h/2 ; % Boolen-vector: διάσταση όσο το x κ με τιμές "1" μόνο στο στρ. οδήγησης
disp(' ');
disp( '  Modal-Confinement Estimation: ' )
for k1 = 1:length(neff_TE)
    I_tot = trapz( x , abs(Ey_TE(k1,:)).^2 ); 
    I_cor = trapz( x(icore) , abs(Ey_TE(k1,icore)).^2 );
    fprintf( '     Mode TE%d |Ey|^2 in-core/total ratio : %6.4f\n' , k1-1 , I_cor/I_tot )
end
disp(' ');
for k2 = 1:length(neff_TM)
    I_tot = trapz( x , abs(Hy_TM(k2,:)).^2 ); 
    I_cor = trapz( x(icore) , abs(Hy_TM(k2,icore)).^2 );
    fprintf( '     Mode TM%d |Hy|^2 in-core/total ratio : %6.4f\n' , k2-1 , I_cor/I_tot )
end

pause
% =========================================================================
% Διαγράμματα Διασποράς
% =========================================================================
disp(' ');
disp( '  ======== SPDWG Dipsersion-Curve ======== ' )

% Σε ένα διάγραμμα διασποράς βλέπουμε πως εξαρτάται η φασική σταθερά β
% (ή ο ενεργός δείκτης, neff, με β=k0*neff και k0=2*pi/wl) σε σχέση με τη 
% συχνότητα (f ή ω=2*πι*f ή το μήκος κύματος). Για να φτιάξουμε ένα 
% διάγραμμα διασποράς, θα πρέπει να "τρέξουμε" πολλές φορές την APDWG 
% αλλάζοντας μόνο το μήκος κύματος. 
%
% Πιο γενικευμένα, η διασπορά είναι η εξάρτηση κάποιου χαρακτηριστικού του
% ΟΔΗΓΟΥΜΕΝΟΥ-ΡΥΘΜΟΥ ενός κ/ο (πχ το neff, η "ενεργός επιφάνεια ρυθμού", ή
% η συγκέντρωση-ισχύος εντός πυρήνα) σαν συνάρτηση μίας παραμέτρου του 
% ΚΥΜΑΤΟΔΗΓΟΥ (πχ η συχνότητα λειτουργίας, οι γεωμετρικές διαστάσεις, τα
% χαρακτηριστικά των υλικών [δείκτες διάθλασης] που τον αποτελούν).

% Ας εξετάσουμε τώρα κάποιο διάγραμμα-διασποράς ω-β των ΤΕ ρυθμών, στην 
% απλούστερη περίπτωση του συμμετρικού κ/ο πλάκας (n2==n3), του "SPDWG".
h = 0.4;
n3 = 1;
n2 = 1;

% Για να αναπαράγουμε το διάγραμμα ω-β Σχ. 2.9, ορίζουμε αρχικά ένα εύρος
% συχνοτήτων (ω), μετά το μετασχηματίζουμε σε μήκη-κύματος (λ, σε μm, γιατί
% σε αυτά δουλεύει η ρουτίνα APDWG) κ σαρώνουμε αυτά τα μήκη-κύματος 
% αφήνοντας την APDWG να μας υπολογίσει τα n-effective. Τέλος β=neff*2*pi/λ
c0    = 3e8; % [m/sec] Speed-of-ligh
omega = linspace( eps , 2.5e15 , 100 );% [rad/sec] angular velocities ω=k0*c0=2*pi/wl*c0
k0s   = omega / c0; % [1/m] free-space wavenumbers
wls   = 2*pi*c0./omega * 1e6; % [μm] wavelengths (free-space)

% Αρχικοποίηση του πίνακα αποθήκευσης των αποτελεσμάτων (εδώ τα n-eff)
% για max 4 ΤΕ οδηγούμενους ρυθμούς
neffs_TE = NaN*zeros( length(wls) , 4 ); 
for k = 1:length(wls) % Σάρωση των μηκών-κύματος
    [ neff_TE ] = APDWG( wls(k) , h , n1 , n2 , n3 ); % Κλήση της APDWG    
    neffs_TE(k,1:length(neff_TE)) = neff_TE; % Αποθήκευση αποτελεσμάτων
end
beta = neffs_TE .* repmat( k0s(:) , [1,size(neffs_TE,2)] ); % [rad/m] phase-constants

% Ας ζωγραφίσουμε το διάγραμμα διασποράς (Σχ. 2.9)
figure;
subplot(1,2,1)
plot( beta , omega ); hold on;
legend( [repmat('TE-',[4,1]),num2str( (0:4-1)' )] )
plot( beta , beta*c0/n1 , 'k--' ) % η γραμμή που ορίζει την οδήγηση "πλήρως" εντός πυρήνα
plot( beta , beta*c0/n2 , 'k:' ) % η γραμμή που ορίζει το όριο αποκοπής ("οδήγηση" εκτός πυρήνα) 
xlabel( '\beta (rad/m)')
ylabel( '\omega (rad/sec)')
set( gca , 'YLim' , [0,max(omega)] )

% Ας το δούμε και στην "κανονικοποιημένη" μορφή b-vs-V
V = 0.5*(2*pi./wls)*h*sqrt(n1^2-n2^2);
b = real( sqrt( neffs_TE.^2 - n2.^2 ) / sqrt( n1^2 - n2^2 ) );
subplot(1,2,2)
plot( V , b ); hold on;
legend( [repmat('TE-',[4,1]),num2str( (0:4-1)' )] )
xlabel( 'Normalized Frequency "V-number" (.)')
ylabel( 'Normalized Propagation-Constant "b" (.)')
set( gca , 'YLim' , [0,1] )

% ΠΡΟΣΟΧΗ: Για τον SPDWG, ξέρουμε από τη θεωρία πως εμφανίζεται ένας νέος
% οδηγούμενος ΤΕ ρυθμός κάθε φορά που η κανονικοποιημένη συχνότητα (αριθμός 
% "V") ξεπερνάει κάποιο ακέραιο πολ/σιο του π/2 (Εξ. 2.40-42). ’ρα, για 
% τους πρώτους τέσσερις ρυθμούς θα έχουμε: 
%         V = 0.5*k0*h*sqrt(n1^2-n2^2) == [0:3]*pi/2 ==>
%     ==> ω_cutoff = ( 2*c0/h/sqrt(n1^2-n2^2) )*[0:3]*pi/2
% Τώρα, στο αριστερό διάγραμμα-διασποράς που προέκυψε, άμα κάνετε zoom στα
% σημεία που "ξεφυτρώνουν" οι καμπύλες-διασποράς από την γραμμή c0/n2 (--), 
% θα πρέπει να βρείτε στον y-άξονα (ω) ακριβώς τα παρακάτω νούμερα:
omega_cutoff = ( 2*c0/h/1e-6/sqrt(n1^2-n2^2) )*[0:3]'*pi/2;
for km=0:3
    fprintf( '  ** Mode TE-%d cutoff @ omega = %4.2e [rad/sec]\n' , km , omega_cutoff(km+1) );
end
% Τελικά, στο δεξί "κανονικοποιημένο" διάγραμμα-διασποράς, οι αντίστοιχες
% καμπύλες πρέπει να "ξεφυτρώνουν" από τα σημεία V=0,pi/2,pi,3*pi/2





